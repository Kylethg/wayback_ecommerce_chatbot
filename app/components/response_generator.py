"""
Response generator for the Wayback Ecommerce Chatbot.
"""

import datetime
from typing import Dict, Any, Optional

class ResponseGenerator:
    """Format insights into a user-friendly response"""
    
    def __init__(self):
        pass
    
    def generate_response(
        self, 
        domain: str, 
        snapshot_date: datetime.date, 
        insights: str, 
        wayback_url: str,
        query: str
    ) -> Dict[str, Any]:
        """
        Generate a formatted response with insights and metadata
        
        Args:
            domain: Domain name of the website
            snapshot_date: Date of the snapshot
            insights: Insights generated by the content analyzer
            wayback_url: URL to the Wayback Machine snapshot
            query: Original user query
            
        Returns:
            Dictionary with formatted response and metadata
        """
        # Format the response
        response = {
            "domain": domain,
            "snapshot_date": snapshot_date,
            "insights": insights,
            "wayback_url": wayback_url,
            "query": query,
            "generated_at": datetime.datetime.now(),
            "formatted_response": self._format_insights(domain, snapshot_date, insights, wayback_url)
        }
        
        return response
    
    def _format_insights(
        self, 
        domain: str, 
        snapshot_date: datetime.date, 
        insights: str, 
        wayback_url: str
    ) -> str:
        """
        Format insights into a user-friendly response
        
        Args:
            domain: Domain name of the website
            snapshot_date: Date of the snapshot
            insights: Insights generated by the content analyzer
            wayback_url: URL to the Wayback Machine snapshot
            
        Returns:
            Formatted response as string
        """
        # Create a header with domain and date
        header = f"# Insights for {domain} on {snapshot_date.strftime('%B %d, %Y')}\n\n"
        
        # Add the insights
        formatted_insights = insights
        
        # Add a link to the Wayback Machine snapshot
        footer = f"\n\n---\n\n[View original snapshot on Wayback Machine]({wayback_url})\n"
        
        # Combine all parts
        return header + formatted_insights + footer
    
    def generate_error_response(self, error_message: str, query: Optional[str] = None) -> Dict[str, Any]:
        """
        Generate an error response
        
        Args:
            error_message: Error message
            query: Original user query
            
        Returns:
            Dictionary with error response
        """
        response = {
            "error": True,
            "error_message": error_message,
            "query": query,
            "generated_at": datetime.datetime.now(),
            "formatted_response": f"## Error\n\n{error_message}\n\nPlease try again with a different query."
        }
        
        return response